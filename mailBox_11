import React, { useEffect, useState } from "react";
import { Container, Button, Card, ListGroup } from "react-bootstrap";
import { useHistory } from "react-router-dom";
import { db } from "../Firebase";
import { doc, getDoc, deleteDoc } from "firebase/firestore";
import { useSelector } from "react-redux";
import { selectMails } from "../store/mails";
import { useParams } from "react-router-dom/cjs/react-router-dom.min";
import { Trash } from "react-bootstrap-icons"; 

const Message = () => {
  const [receivedMails, setReceivedMails] = useState([]);
  const email = useSelector((state) => state.auth.email);
  const history = useHistory();
  const messageId = useParams().messageId; 
  useEffect(() => {
    const fetchMessage = async () => {
      try {
      
        const inboxMessageDoc = await getDoc(doc(db, `mailboxes/${email}/inbox/${messageId}`));
        if (inboxMessageDoc.exists()) {
          setReceivedMails([inboxMessageDoc.data()]);
        } else {
         
          const sentboxMessageDoc = await getDoc(doc(db, `mailboxes/${email}/sentbox/${messageId}`));
          if (sentboxMessageDoc.exists()) {
            setReceivedMails([sentboxMessageDoc.data()]);
          } else {
            console.log("Message Not Found");
          }
        }
      } catch (error) {
        console.error("Error fetching message: ", error);
      }
    };

    fetchMessage();
  }, [email, messageId]);

  const handleBackClick = () => {
    history.goBack();
  };

  const extractPreviewFromJSON = (jsonContent) => {
    try {
      const parsedContent = JSON.parse(jsonContent);
      const text = parsedContent?.blocks?.[0]?.text || "";
      return text;
    } catch (error) {
      console.error("Error parsing JSON content: ", error);
      return "";
    }
  };

  const handleDeleteClick = async () => {
    const messageDocRef = doc(db, `mailboxes/${email}/inbox/${messageId}`);
    await deleteDoc(messageDocRef);

   
    const sentboxMessageDocRef = doc(db, `mailboxes/${email}/sentbox/${messageId}`);
    await deleteDoc(sentboxMessageDocRef);

    history.goBack();
  };

  return (
    <Container className="d-flex align-items-center justify-content-center vh-80">
      <Card className="shadow" style={{ width: "100rem" , marginTop:'3rem'}}>
        <Card.Header>
          <h5>Message</h5>
        </Card.Header>
        <Card.Body>
          {receivedMails.map((mail) => (
            <ListGroup.Item key={mail.id}>
              <strong>From: {mail.from}</strong>
              <br />
              <span>Subject: {mail.subject}</span>
              <br />
              <span>{extractPreviewFromJSON(mail.content)}</span>
              <br />
              <Button variant="danger" onClick={handleDeleteClick}>
                <Trash size={20} />
              </Button>
            </ListGroup.Item>
          ))}
        </Card.Body>
        <Card.Footer>
          <Button variant="primary" onClick={handleBackClick}>
            Back
          </Button>
        </Card.Footer>
      </Card>
    </Container>
  );
};

export default Message;
