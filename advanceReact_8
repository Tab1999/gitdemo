//app.js
// Your parent component (e.g., App.js)
import React, { useState } from 'react';
import ExpenseForm from './ExpenseForm';

const App = () => {
  const [expenses, setExpenses] = useState([]);

  const addExpenseHandler = (expenseData) => {
    // Update the expenses array with the new expense data
    setExpenses((prevExpenses) => [...prevExpenses, expenseData]);
  };

  return (
    <div>
      <h1>Expense Tracker</h1>
      <ExpenseForm onAddExpense={addExpenseHandler} />

      {/* Display the list of expenses */}
      <ul>
        {expenses.map((expense, index) => (
          <li key={index}>
            {expense.title} - ${expense.amount} - {expense.date.toDateString()}
          </li>
        ))}
      </ul>
    </div>
  );
};

export default App;




// ExpenseForm.js
import React, { useState } from 'react';

const ExpenseForm = ({ onAddExpense }) => {
  const [userInput, setUserInput] = useState({
    title: '',
    amount: '',
    date: '',
  });

  const handleInputChange = (event) => {
    const { name, value } = event.target;
    setUserInput((prevInput) => ({
      ...prevInput,
      [name]: value,
    }));
  };

  const handleSubmit = (event) => {
    event.preventDefault();

    const expenseData = {
      title: userInput.title,
      amount: userInput.amount,
      date: new Date(userInput.date), // Convert the date to a Date object
    };

    // Pass the new expense data to the parent component
    onAddExpense(expenseData);

    // Clear the form after submission
    setUserInput({
      title: '',
      amount: '',
      date: '',
    });
  };

  return (
    <form onSubmit={handleSubmit}>
      <label htmlFor="expenseTitle">Expense Title:</label>
      <input
        type="text"
        id="expenseTitle"
        name="title"
        value={userInput.title}
        onChange={handleInputChange}
      />

      <label htmlFor="expenseAmount">Expense Amount:</label>
      <input
        type="number"
        id="expenseAmount"
        name="amount"
        value={userInput.amount}
        onChange={handleInputChange}
      />

      <label htmlFor="expenseDate">Date:</label>
      <input
        type="date"
        id="expenseDate"
        name="date"
        value={userInput.date}
        onChange={handleInputChange}
      />

      <button type="submit">Add Expense</button>
    </form>
  );
};

export default ExpenseForm;

